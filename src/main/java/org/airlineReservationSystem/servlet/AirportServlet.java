package org.airlineReservationSystem.servlet;

import org.airlineReservationSystem.service.AirportService;
import org.airlineReservationSystem.model.Airport;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;

@WebServlet("/AirportServlet")
public class AirportServlet extends HttpServlet {
    private AirportService airportService;

    @Override
    public void init() throws ServletException {
        try {
            // Setup database connection (use your actual DB URL, user, and password here)
            Connection connection = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/airline_reservation_system", "username", "password");
            airportService = new AirportService(connection);
        } catch (SQLException e) {
            throw new ServletException("DB connection error", e);
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            List<Airport> airports = airportService.getAllAirports();
            request.setAttribute("airports", airports);
            request.getRequestDispatcher("airports.jsp").forward(request, response);
        } catch (SQLException e) {
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Database error");
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String name = request.getParameter("name");
        String code = request.getParameter("code");
        String city = request.getParameter("city");
        String country = request.getParameter("country");

        Airport newAirport = new Airport(0, name, code, city, country);  // ID is generated by DB
        try {
            boolean success = airportService.addAirport(newAirport);
            if (success) {
                response.sendRedirect("AirportServlet");  // Redirect to list of airports
            } else {
                response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Failed to add airport");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Database error");
        }
    }
}
