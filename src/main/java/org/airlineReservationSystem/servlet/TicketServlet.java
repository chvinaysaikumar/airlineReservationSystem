package org.airlineReservationSystem.servlet;

import org.airlineReservationSystem.model.Ticket;
import org.airlineReservationSystem.service.TicketService;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.*;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.List;

@WebServlet("/TicketServlet")
public class TicketServlet extends HttpServlet {
    private TicketService ticketService;

    @Override
    public void init() throws ServletException {
        try {
            // Setup database connection (use your actual DB URL, user, and password here)
            Connection connection = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/airline_reservation_system", "username", "password");
            ticketService = new TicketService(connection);
        } catch (SQLException e) {
            throw new ServletException("DB connection error", e);
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        try {
            List<Ticket> tickets = ticketService.getAllTickets();
            request.setAttribute("tickets", tickets);
            request.getRequestDispatcher("tickets.jsp").forward(request, response);
        } catch (SQLException e) {
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Database error");
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int reservationId = Integer.parseInt(request.getParameter("reservationId"));
        int seatId = Integer.parseInt(request.getParameter("seatId"));
        double price = Double.parseDouble(request.getParameter("price"));

        Ticket newTicket = new Ticket(0, reservationId, seatId, price);  // ID is generated by DB
        try {
            boolean success = ticketService.addTicket(newTicket);
            if (success) {
                response.sendRedirect("TicketServlet");  // Redirect to list of tickets
            } else {
                response.sendError(HttpServletResponse.SC_BAD_REQUEST, "Failed to add ticket");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR, "Database error");
        }
    }
}
